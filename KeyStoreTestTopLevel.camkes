/**
 * Copyright (C) 2019, Hensoldt Cyber GmbH
 */

import <std_connector.camkes>;

import "components/TopLevelTestRunner/TopLevelTestRunner.camkes";
import "components/TestRunnerKeystoreFAT/TestRunnerKeystoreFAT.camkes";
import "components/KeyStoreFAT/KeyStoreFAT.camkes";
import "components/ChanMux/ChanMux.camkes";
import "components/Uart/Uart.camkes";

assembly {
    composition {
        component   TopLevelTestRunner      topLevelTestRunner;
        component   TestRunnerKeystoreFAT   testRunnerKeystoreFAT;
        component   KeyStoreFAT             keyStoreFAT;
        component   ChanMux                 chanMux;
        component   UartDev                 uartDev;
        component   UartDrv                 uartDrv;

        /************************** Chanmux / Uart internal connections ****************************/
        connection  seL4RPCCall         chanmux_uart            (from chanMux.Output, to uartDrv.UartDrv);
        connection  seL4RPCCall         uart_chanmux            (from uartDrv.Output, to chanMux.ChanMuxOut);
        connection  seL4SharedData      uart_dataConnection     (from chanMux.outputDataPort, to uartDrv.inputDataPort);
        connection  seL4HardwareMMIO    uart_memio              (from uartDrv.uartRegBase, to uartDev.uartRegBase);

        /************************** Chanmux - TestRunnerKeystoreFAT connections ****************************/
        connection  seL4RPCCall         trFAT_chanmux_rpc       (from testRunnerKeystoreFAT.ChanMuxRpc, to chanMux.ChanMuxIn);
        connection  seL4SharedData      trFAT_chanmux_data      (from testRunnerKeystoreFAT.chanMuxDataPort, to chanMux.mainDataPort);
        connection  seL4Notification    trFAT_chanmux_sig       (from chanMux.dataAvailableMain, to testRunnerKeystoreFAT.ChanMuxSignal_dataAvailable);

        /************************** Chanmux - KeyStoreFAT connections ****************************/
        connection  seL4RPCCall         ksFAT_chanmux_rpc       (from keyStoreFAT.ChanMuxRpc, to chanMux.ChanMuxIn);
        connection  seL4SharedData      ksFAT_chanmux_data      (from keyStoreFAT.chanMuxDataPort, to chanMux.mainDataPort);
        connection  seL4Notification    ksFAT_chanmux_sig       (from chanMux.dataAvailableMain, to keyStoreFAT.ChanMuxSignal_dataAvailable);

        /************************** TestRunnerKeystoreFAT - KeyStoreFAT connections ****************************/
        connection seL4SharedData       trFAT_ksFAT_cr_data     (from testRunnerKeystoreFAT.cryptoClientDataport, to keyStoreFAT.cryptoServerDataport);
        connection seL4RPCCall          trFAT_ksFAT_cr_rpc_1    (from testRunnerKeystoreFAT.Crypto, to keyStoreFAT.Crypto);
        connection seL4RPCCall          trFAT_ksFAT_cr_prc_2    (from testRunnerKeystoreFAT.SeosCryptoRpc, to keyStoreFAT.SeosCryptoRpc);

        connection seL4SharedData       trFAT_ksFAT_ks_data     (from testRunnerKeystoreFAT.keyStoreClientDataport, to keyStoreFAT.keyStoreServerDataport);
        connection seL4RPCCall          trFAT_ksFAT_ks_rpc_1    (from testRunnerKeystoreFAT.KeyStore, to keyStoreFAT.KeyStore);
        connection seL4RPCCall          trFAT_ksFAT_ks_prc_2    (from testRunnerKeystoreFAT.SeosKeyStoreRpc, to keyStoreFAT.SeosKeyStoreRpc);

        /************************** TopLevelTestRunner - TestRunnerKeystoreFAT connections ****************************/
        connection seL4RPCCall          topLvlTR_trFAT_rpc  (from topLevelTestRunner.testRunnerKeyStoreFatInf, to testRunnerKeystoreFAT.testRunnerInf);
    }

    configuration{
        /************************** Uart configuration ****************************/
        uartDev.uartRegBase_paddr  = 0xE0000000;
        uartDev.uartRegBase_size   = 0x1000;

        uartDrv.inputDataPort       = "R";

        /************************** FS configuration for the KeyStoreFAT component ****************************/
        testRunnerKeystoreFAT.disk_information = 
        { 
            "disk_size" : 0x6025800, 
            "block_size_default" : 512 
        };
        testRunnerKeystoreFAT.chanmux_ch = 
        {
            "channel" : 6
        };
        testRunnerKeystoreFAT.partition_conf = 
        { 
            "partition" :   [
                                {   "partition_name" : "",
                                    "partition_size" : 32*1024 // 32 KiByte
                                },
                                {   "partition_name" : "",
                                    "partition_size" : 32*1024 // 32 KiByte
                                },
                                {   "partition_name" : "",
                                    "partition_size" : 32*1024 // 32 KiByte
                                }
                            ]
        };

        /************************** FS configuration for the TestRunnerKeyStoreFAT component ****************************/
        keyStoreFAT.disk_information = 
        {
            "disk_size" : 0x6025800,
            "block_size_default" : 512 
        };
        keyStoreFAT.chanmux_ch = 
        {
            "channel" : 6
        };
        keyStoreFAT.partition_conf = 
        { 
            "partition" :   [
                                {   "partition_name" : "",
                                    "partition_size" : 32*1024 // 32 KiByte
                                },
                                {   "partition_name" : "",
                                    "partition_size" : 32*1024 // 32 KiByte
                                },
                                {   "partition_name" : "",
                                    "partition_size" : 32*1024 // 32 KiByte
                                }
                            ]
        };
    }
}

